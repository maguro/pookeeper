# File generated by hadoop record compiler. Do not edit.
"""
 Licensed to the Apache Software Foundation (ASF) under one
 or more contributor license agreements.  See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership.  The ASF licenses this file
 to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
"""

class AuthPacket:
    def __init__(self, auth_type, scheme, auth):
        self.type = 100
        self.auth_type = auth_type
        self.scheme = scheme
        self.auth = auth

    def serialize(self, output_archive, tag):
        output_archive.start_record(tag)
        output_archive.write_int(self.auth_type, 'type')
        output_archive.write_string(self.scheme, 'scheme')
        output_archive.write_buffer(self.auth, 'auth')
        output_archive.end_record(tag)

    def deserialize(self, input_archive, tag):
        input_archive.start_record(tag)
        self.auth_type = input_archive.read_int('type')
        self.scheme = input_archive.read_string('scheme')
        self.auth = input_archive.read_buffer('auth')
        input_archive.end_record(tag)

    def __repr__(self):
        return 'AuthPacket(%r, %r, %r)' % (self.auth_type, self.scheme, self.auth)

    def __eq__(self, other):
        return self.auth_type == other.type and self.scheme == other.scheme and self.auth == other.auth

    def __ne__(self, other):
        return not self.__eq__(other)

    def __hash__(self):
        return hash((self.auth_type, self.scheme, self.auth))
